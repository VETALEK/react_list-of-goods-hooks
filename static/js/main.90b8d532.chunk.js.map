{"version":3,"sources":["App.tsx","GoodsList/GoodsList.tsx","index.tsx"],"names":["SortBy","GoodsList","goods","className","map","goodName","goodsFromServer","App","useState","isVisible","setVisible","isReversed","setReversed","none","sortProp","setSortProp","minLen","setMinLen","type","onClick","visibleGoods","filter","length","alphabet","sort","good1","good2","localeCompare","nameLength","reverse","id","checked","onChange","reversedValue","htmlFor","option","target","Number","value","Array","fill","_","index","selected","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,4CCZQC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,oBAAIC,UAAU,YAAd,SAEID,EAAME,KAAI,SAACC,GAAD,OACR,6BACGA,GADMA,SDNbC,G,MAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,Y,SAGGN,O,eAAAA,I,uBAAAA,I,4BAAAA,M,KAML,IAgIeO,EAhIO,WACpB,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgBF,mBAASF,GAAlBJ,EAAP,oBACA,EAAkCM,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASR,EAAOa,MAAhD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BP,mBAAS,GAArC,mBAAOQ,EAAP,KAAeC,EAAf,KAEA,IAAKR,EACH,OACE,qBAAKN,UAAU,MAAf,SACE,wBACEA,UAAU,cACVe,KAAK,SACLC,QAAS,kBAAMT,GAAW,IAH5B,qBAWN,IAAMU,EAAelB,EAAMmB,QAAO,qBAAGC,QAAuBN,KAE5D,OAAQF,GACN,KAAKd,EAAOuB,SACVH,EAAaI,MACX,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAGxC,MAGF,KAAK1B,EAAO4B,WACVR,EAAaI,MACX,uBAAGF,OAAH,EAAqBA,UAMzB,KAAKtB,EAAOa,MAUd,OAJIF,GACFS,EAAaS,UAIb,sBAAK1B,UAAU,MAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,uBACEA,UAAU,gBACVe,KAAK,WACLY,GAAG,iBACHC,QAASpB,EACTqB,SAAU,kBAAMpB,GACd,SAACqB,GAAD,OAAoBA,QAIxB,uBACE9B,UAAU,2BACV+B,QAAQ,iBAFV,qBAOA,wBACE/B,UAAU,cACVe,KAAK,SACLC,QAAS,kBAAMJ,EAAYf,EAAOuB,WAHpC,iCAQA,wBACEpB,UAAU,cACVe,KAAK,SACLC,QAAS,kBAAMJ,EAAYf,EAAO4B,aAHpC,4BAQA,wBACEzB,UAAU,gBACV6B,SACE,gBAAWG,EAAX,EAAGC,OAAH,OAAwBnB,EAAUoB,OAAOF,EAAOG,SAHpD,SAOK,IAAIC,MAAM,IACRC,KAAK,MACLpC,KAAI,SAACqC,EAAGC,GAAJ,OACH,wBACEJ,MAAOI,EAAQ,EAGfC,SAAUD,EAAQ,IAAM1B,EAJ1B,mBAMM0B,EAAQ,EANd,cAGOA,EAAQ,QASvB,wBACEvC,UAAU,cACVe,KAAK,SACLC,QAAS,WACPF,EAAU,GACVL,GAAY,GACZG,EAAYf,EAAOa,OANvB,sBAaF,qBAAKV,UAAU,iBAAf,SACE,cAAC,EAAD,CAAWD,MAAOkB,UE/I1BwB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.90b8d532.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { GoodsList } from './GoodsList';\n\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  none,\n  alphabet,\n  nameLength,\n}\n\nconst App: React.FC = () => {\n  const [isVisible, setVisible] = useState(false);\n  const [goods] = useState(goodsFromServer);\n  const [isReversed, setReversed] = useState(false);\n  const [sortProp, setSortProp] = useState(SortBy.none);\n  const [minLen, setMinLen] = useState(1);\n\n  if (!isVisible) {\n    return (\n      <div className=\"App\">\n        <button\n          className=\"App__button\"\n          type=\"button\"\n          onClick={() => setVisible(true)}\n        >\n          Start\n        </button>\n      </div>\n    );\n  }\n\n  const visibleGoods = goods.filter(({ length }) => length >= minLen);\n\n  switch (sortProp) {\n    case SortBy.alphabet: {\n      visibleGoods.sort(\n        (good1, good2) => good1.localeCompare(good2),\n      );\n\n      break;\n    }\n\n    case SortBy.nameLength: {\n      visibleGoods.sort(\n        ({ length: len1 }, { length: len2 }) => len1 - len2,\n      );\n\n      break;\n    }\n\n    case SortBy.none:\n    default: {\n      break;\n    }\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__buttonsSection\">\n        <input\n          className=\"App__checkbox\"\n          type=\"checkbox\"\n          id=\"reverseToggler\"\n          checked={isReversed}\n          onChange={() => setReversed(\n            (reversedValue) => !reversedValue,\n          )}\n        />\n\n        <label\n          className=\"App__button App__toggler\"\n          htmlFor=\"reverseToggler\"\n        >\n          Reverse\n        </label>\n\n        <button\n          className=\"App__button\"\n          type=\"button\"\n          onClick={() => setSortProp(SortBy.alphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          className=\"App__button\"\n          type=\"button\"\n          onClick={() => setSortProp(SortBy.nameLength)}\n        >\n          Sort by length\n        </button>\n\n        <select\n          className=\"App__dropdown\"\n          onChange={\n            ({ target: option }) => setMinLen(Number(option.value))\n          }\n        >\n          {\n            (new Array(10))\n              .fill(null)\n              .map((_, index) => (\n                <option\n                  value={index + 1}\n                  // eslint-disable-next-line\n                  key={index + 1}\n                  selected={index + 1 === minLen}\n                >\n                  {`${index + 1}+ letters`}\n                </option>\n              ))\n          }\n        </select>\n\n        <button\n          className=\"App__button\"\n          type=\"button\"\n          onClick={() => {\n            setMinLen(1);\n            setReversed(false);\n            setSortProp(SortBy.none);\n          }}\n        >\n          Reset\n        </button>\n      </div>\n\n      <div className=\"App__goodsList\">\n        <GoodsList goods={visibleGoods} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import './GoodsList.scss';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul className=\"GoodsList\">\n      {\n        goods.map((goodName) => (\n          <li key={goodName}>\n            {goodName}\n          </li>\n        ))\n      }\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}