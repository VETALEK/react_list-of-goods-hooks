{"version":3,"sources":["App.tsx","GoodsList/GoodsList.tsx","index.tsx"],"names":["SortBy","GoodsList","goods","map","goodName","goodsFromServer","App","useState","isVisible","setVisible","isReversed","setReversed","none","sortProp","setSortProp","minLen","setMinLen","type","onClick","visibleGoods","filter","length","alphabet","sort","good1","good2","localeCompare","nameLength","reverse","className","id","checked","onChange","reversedValue","htmlFor","option","target","Number","value","Array","fill","_","index","selected","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,qCCdQC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,6BAEIA,EAAMC,KAAI,SAACC,GAAD,OACR,6BACGA,GADMA,SDJbC,G,MAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,Y,SAGGL,O,eAAAA,I,uBAAAA,I,4BAAAA,M,KAML,IAiHeM,EAjHO,WACpB,MAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgBF,mBAASF,GAAlBH,EAAP,oBACA,EAAkCK,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAASP,EAAOY,MAAhD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA4BP,mBAAS,GAArC,mBAAOQ,EAAP,KAAeC,EAAf,KAEA,IAAKR,EACH,OACE,wBACES,KAAK,SACLC,QAAS,kBAAMT,GAAW,IAF5B,mBASJ,IAAMU,EAAejB,EAAMkB,QAAO,qBAAGC,QAAuBN,KAE5D,OAAQF,GACN,KAAKb,EAAOsB,SACVH,EAAaI,MACX,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAGxC,MAGF,KAAKzB,EAAO2B,WACVR,EAAaI,MACX,uBAAGF,OAAH,EAAqBA,UAMzB,KAAKrB,EAAOY,MAUd,OAJIF,GACFS,EAAaS,UAIb,sBAAKC,UAAU,MAAf,UACE,uBACEZ,KAAK,WACLa,GAAG,iBACHC,QAASrB,EACTsB,SAAU,kBAAMrB,GACd,SAACsB,GAAD,OAAoBA,QAIxB,uBAAOC,QAAQ,iBAAf,qBAIA,wBACEjB,KAAK,SACLC,QAAS,kBAAMJ,EAAYd,EAAOsB,WAFpC,iCAOA,wBACEL,KAAK,SACLC,QAAS,kBAAMJ,EAAYd,EAAO2B,aAFpC,4BAOA,wBACEK,SACE,gBAAWG,EAAX,EAAGC,OAAH,OAAwBpB,EAAUqB,OAAOF,EAAOG,SAFpD,SAMK,IAAIC,MAAM,IACRC,KAAK,MACLrC,KAAI,SAACsC,EAAGC,GAAJ,OACH,wBACEJ,MAAOI,EAAQ,EAGfC,SAAUD,EAAQ,IAAM3B,EAJ1B,mBAMM2B,EAAQ,EANd,cAGOA,EAAQ,QASvB,wBACEzB,KAAK,SACLC,QAAS,WACPF,EAAU,GACVL,GAAY,GACZG,EAAYd,EAAOY,OALvB,mBAWA,cAAC,EAAD,CAAWV,MAAOiB,QEjIxByB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6019abdb.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { GoodsList } from './GoodsList';\n\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortBy {\n  none,\n  alphabet,\n  nameLength,\n}\n\nconst App: React.FC = () => {\n  const [isVisible, setVisible] = useState(false);\n  const [goods] = useState(goodsFromServer);\n  const [isReversed, setReversed] = useState(false);\n  const [sortProp, setSortProp] = useState(SortBy.none);\n  const [minLen, setMinLen] = useState(1);\n\n  if (!isVisible) {\n    return (\n      <button\n        type=\"button\"\n        onClick={() => setVisible(true)}\n      >\n        Start\n      </button>\n    );\n  }\n\n  const visibleGoods = goods.filter(({ length }) => length >= minLen);\n\n  switch (sortProp) {\n    case SortBy.alphabet: {\n      visibleGoods.sort(\n        (good1, good2) => good1.localeCompare(good2),\n      );\n\n      break;\n    }\n\n    case SortBy.nameLength: {\n      visibleGoods.sort(\n        ({ length: len1 }, { length: len2 }) => len1 - len2,\n      );\n\n      break;\n    }\n\n    case SortBy.none:\n    default: {\n      break;\n    }\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      <input\n        type=\"checkbox\"\n        id=\"reverseToggler\"\n        checked={isReversed}\n        onChange={() => setReversed(\n          (reversedValue) => !reversedValue,\n        )}\n      />\n\n      <label htmlFor=\"reverseToggler\">\n        Reverse\n      </label>\n\n      <button\n        type=\"button\"\n        onClick={() => setSortProp(SortBy.alphabet)}\n      >\n        Sort alphabetically\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => setSortProp(SortBy.nameLength)}\n      >\n        Sort by length\n      </button>\n\n      <select\n        onChange={\n          ({ target: option }) => setMinLen(Number(option.value))\n        }\n      >\n        {\n          (new Array(10))\n            .fill(null)\n            .map((_, index) => (\n              <option\n                value={index + 1}\n                // eslint-disable-next-line\n                key={index + 1}\n                selected={index + 1 === minLen}\n              >\n                {`${index + 1}+ letters`}\n              </option>\n            ))\n        }\n      </select>\n\n      <button\n        type=\"button\"\n        onClick={() => {\n          setMinLen(1);\n          setReversed(false);\n          setSortProp(SortBy.none);\n        }}\n      >\n        Reset\n      </button>\n\n      <GoodsList goods={visibleGoods} />\n    </div>\n  );\n};\n\nexport default App;\n","type Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {\n        goods.map((goodName) => (\n          <li key={goodName}>\n            {goodName}\n          </li>\n        ))\n      }\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}